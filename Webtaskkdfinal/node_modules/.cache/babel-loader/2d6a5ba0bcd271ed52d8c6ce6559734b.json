{"ast":null,"code":"import { computePosition, arrow as arrow$1 } from '@floating-ui/dom';\nexport * from '@floating-ui/dom';\nimport { useLayoutEffect, useEffect, useRef, useState, useCallback, useMemo } from 'react';\nimport { flushSync } from 'react-dom';\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect; // Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\n// @ts-nocheck\n\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n\n  let length, i, keys;\n\n  if (a && b && typeof a == 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    keys = Object.keys(a);\n    length = keys.length;\n\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n\n    for (i = length; i-- !== 0;) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n\nfunction useFloating(_temp) {\n  let {\n    middleware,\n    placement = 'bottom',\n    strategy = 'absolute'\n  } = _temp === void 0 ? {} : _temp;\n  const reference = useRef(null);\n  const floating = useRef(null);\n  const [data, setData] = useState({\n    // Setting these to `null` will allow the consumer to determine if\n    // `computePosition()` has run yet\n    x: null,\n    y: null,\n    strategy,\n    placement,\n    middlewareData: {}\n  });\n  const [latestMiddleware, setLatestMiddleware] = useState(middleware);\n\n  if (!deepEqual(latestMiddleware == null ? void 0 : latestMiddleware.map(_ref => {\n    let {\n      options\n    } = _ref;\n    return options;\n  }), middleware == null ? void 0 : middleware.map(_ref2 => {\n    let {\n      options\n    } = _ref2;\n    return options;\n  }))) {\n    setLatestMiddleware(middleware);\n  }\n\n  const isMountedRef = useRef(true);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  const update = useCallback(() => {\n    if (!reference.current || !floating.current) {\n      return;\n    }\n\n    computePosition(reference.current, floating.current, {\n      middleware: latestMiddleware,\n      placement,\n      strategy\n    }).then(data => {\n      if (isMountedRef.current) {\n        flushSync(() => {\n          setData(data);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy]);\n  index(update, [update]);\n  const setReference = useCallback(node => {\n    reference.current = node;\n    update();\n  }, [update]);\n  const setFloating = useCallback(node => {\n    floating.current = node;\n    update();\n  }, [update]);\n  const refs = useMemo(() => ({\n    reference,\n    floating\n  }), []);\n  return useMemo(() => ({ ...data,\n    update,\n    refs,\n    reference: setReference,\n    floating: setFloating\n  }), [data, update, refs, setReference, setFloating]);\n}\n\nconst arrow = options => {\n  const {\n    element,\n    padding\n  } = options;\n\n  function isRef(value) {\n    return Object.prototype.hasOwnProperty.call(value, 'current');\n  }\n\n  return {\n    name: 'arrow',\n    options,\n\n    fn(args) {\n      if (isRef(element)) {\n        if (element.current != null) {\n          return arrow$1({\n            element: element.current,\n            padding\n          }).fn(args);\n        }\n\n        return {};\n      } else if (element) {\n        return arrow$1({\n          element,\n          padding\n        }).fn(args);\n      }\n\n      return {};\n    }\n\n  };\n};\n\nexport { arrow, useFloating };","map":{"version":3,"names":["computePosition","arrow","arrow$1","useLayoutEffect","useEffect","useRef","useState","useCallback","useMemo","flushSync","index","document","deepEqual","a","b","toString","length","i","keys","Array","isArray","Object","prototype","hasOwnProperty","call","key","$$typeof","useFloating","_temp","middleware","placement","strategy","reference","floating","data","setData","x","y","middlewareData","latestMiddleware","setLatestMiddleware","map","_ref","options","_ref2","isMountedRef","current","update","then","setReference","node","setFloating","refs","element","padding","isRef","value","name","fn","args"],"sources":["/Users/kuldeepranjan/webdtaskkd/node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.esm.js"],"sourcesContent":["import { computePosition, arrow as arrow$1 } from '@floating-ui/dom';\nexport * from '@floating-ui/dom';\nimport { useLayoutEffect, useEffect, useRef, useState, useCallback, useMemo } from 'react';\nimport { flushSync } from 'react-dom';\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\n// @ts-nocheck\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n\n  let length, i, keys;\n\n  if (a && b && typeof a == 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    keys = Object.keys(a);\n    length = keys.length;\n\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n\n    for (i = length; i-- !== 0;) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n\nfunction useFloating(_temp) {\n  let {\n    middleware,\n    placement = 'bottom',\n    strategy = 'absolute'\n  } = _temp === void 0 ? {} : _temp;\n  const reference = useRef(null);\n  const floating = useRef(null);\n  const [data, setData] = useState({\n    // Setting these to `null` will allow the consumer to determine if\n    // `computePosition()` has run yet\n    x: null,\n    y: null,\n    strategy,\n    placement,\n    middlewareData: {}\n  });\n  const [latestMiddleware, setLatestMiddleware] = useState(middleware);\n\n  if (!deepEqual(latestMiddleware == null ? void 0 : latestMiddleware.map(_ref => {\n    let {\n      options\n    } = _ref;\n    return options;\n  }), middleware == null ? void 0 : middleware.map(_ref2 => {\n    let {\n      options\n    } = _ref2;\n    return options;\n  }))) {\n    setLatestMiddleware(middleware);\n  }\n\n  const isMountedRef = useRef(true);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  const update = useCallback(() => {\n    if (!reference.current || !floating.current) {\n      return;\n    }\n\n    computePosition(reference.current, floating.current, {\n      middleware: latestMiddleware,\n      placement,\n      strategy\n    }).then(data => {\n      if (isMountedRef.current) {\n        flushSync(() => {\n          setData(data);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy]);\n  index(update, [update]);\n  const setReference = useCallback(node => {\n    reference.current = node;\n    update();\n  }, [update]);\n  const setFloating = useCallback(node => {\n    floating.current = node;\n    update();\n  }, [update]);\n  const refs = useMemo(() => ({\n    reference,\n    floating\n  }), []);\n  return useMemo(() => ({ ...data,\n    update,\n    refs,\n    reference: setReference,\n    floating: setFloating\n  }), [data, update, refs, setReference, setFloating]);\n}\nconst arrow = options => {\n  const {\n    element,\n    padding\n  } = options;\n\n  function isRef(value) {\n    return Object.prototype.hasOwnProperty.call(value, 'current');\n  }\n\n  return {\n    name: 'arrow',\n    options,\n\n    fn(args) {\n      if (isRef(element)) {\n        if (element.current != null) {\n          return arrow$1({\n            element: element.current,\n            padding\n          }).fn(args);\n        }\n\n        return {};\n      } else if (element) {\n        return arrow$1({\n          element,\n          padding\n        }).fn(args);\n      }\n\n      return {};\n    }\n\n  };\n};\n\nexport { arrow, useFloating };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}