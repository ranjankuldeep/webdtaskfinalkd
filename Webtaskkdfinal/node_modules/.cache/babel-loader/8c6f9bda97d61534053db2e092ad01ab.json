{"ast":null,"code":"import merge from \"deepmerge\";\nexport default function combineMerge(target, source, options) {\n  var destination = target.slice();\n  return source.forEach(function (item, index) {\n    void 0 === destination[index] ? destination[index] = options.cloneUnlessOtherwiseSpecified(item, options) : options.isMergeableObject(item) ? destination[index] = merge(target[index], item, options) : -1 === target.indexOf(item) && destination.push(item);\n  }), destination;\n}\n;","map":{"version":3,"names":["merge","combineMerge","target","source","options","destination","slice","forEach","item","index","cloneUnlessOtherwiseSpecified","isMergeableObject","indexOf","push"],"sources":["/Users/kuldeepranjan/webdtaskkd/node_modules/@material-tailwind/react/utils/combineMerge.js"],"sourcesContent":["import merge from \"deepmerge\";\nexport default function combineMerge(target, source, options) {\n    var destination = target.slice();\n    return source.forEach(function(item, index) {\n        void 0 === destination[index] ? destination[index] = options.cloneUnlessOtherwiseSpecified(item, options) : options.isMergeableObject(item) ? destination[index] = merge(target[index], item, options) : -1 === target.indexOf(item) && destination.push(item);\n    }), destination;\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,WAAlB;AACA,eAAe,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,OAAtC,EAA+C;EAC1D,IAAIC,WAAW,GAAGH,MAAM,CAACI,KAAP,EAAlB;EACA,OAAOH,MAAM,CAACI,OAAP,CAAe,UAASC,IAAT,EAAeC,KAAf,EAAsB;IACxC,KAAK,CAAL,KAAWJ,WAAW,CAACI,KAAD,CAAtB,GAAgCJ,WAAW,CAACI,KAAD,CAAX,GAAqBL,OAAO,CAACM,6BAAR,CAAsCF,IAAtC,EAA4CJ,OAA5C,CAArD,GAA4GA,OAAO,CAACO,iBAAR,CAA0BH,IAA1B,IAAkCH,WAAW,CAACI,KAAD,CAAX,GAAqBT,KAAK,CAACE,MAAM,CAACO,KAAD,CAAP,EAAgBD,IAAhB,EAAsBJ,OAAtB,CAA5D,GAA6F,CAAC,CAAD,KAAOF,MAAM,CAACU,OAAP,CAAeJ,IAAf,CAAP,IAA+BH,WAAW,CAACQ,IAAZ,CAAiBL,IAAjB,CAAxO;EACH,CAFM,GAEHH,WAFJ;AAGH;AAAA"},"metadata":{},"sourceType":"module"}